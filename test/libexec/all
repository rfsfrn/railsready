#!/usr/bin/env bash
#
#
# Authors:
#   rfsfrn <rfsfrn@users.noreply.github.com>

# -----------------------------------------------------------------------------
# Check if bats is already installed.
# -----------------------------------------------------------------------------

# Install bats if needed.
command -v bats >/dev/null 2>&1 || {
  read -p "bats: Can't find bats, install now? [y/n]: " -n 1 -r
  echo ""
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    git clone https://github.com/sstephenson/bats.git /usr/local/src/bats
    cd /usr/local/src/bats
    ./install.sh /usr/local
  fi
  command -v bats >/dev/null 2>&1 || {
    echo -e >&2 "\033[0;31mbats is required but it's not installed, aborting. Please install bats and try again.\033[0m"
    echo -e >&2 "\033[0;31mSee: https://github.com/sstephenson/bats\033[0m"
    exit 1
  }
}

# -----------------------------------------------------------------------------
# Run Test.
# -----------------------------------------------------------------------------

run_test() {
  local file=$1
  local filename=$(basename $1)
  local ret_val
  echo -e "\033[0;36mRunning ${filename}...\033[0m"
  echo -e "\033[0;36m-> ${file}\033[0m"
  bats "${file}"
  ret_val=$?
  if [ $ret_val -gt 0 ]; then
    echo -e "\033[0;31m${filename} had errors\033[0m\n"
  else
    echo -e "\033[0;32m${filename} passed\033[0m\n"
  fi
  return $ret_val
}

# -----------------------------------------------------------------------------
# Main.
# -----------------------------------------------------------------------------

if [ $# -ge 1 ]; then
  for file in $* ; do
    if [ -r ${RAILSREADY_TEST_ROOT}/${file} ]; then
      run_test ${RAILSREADY_TEST_ROOT}/${file}
    else
      echo -e >&2 "\033[0;31mTest '${RAILSREADY_TEST_ROOT}/${file}' not exists, aborting.\033[0m\n"
    fi
  done
else
  echo -e "\033[0;36mRun BATS in '${RAILSREADY_TEST_ROOT}'\033[0m"
  bats --tap "${RAILSREADY_TEST_ROOT}"
fi
